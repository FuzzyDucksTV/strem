@using Strem.Core.Portals

<h3 class="title is-3 has-text-black">Edit Button</h3>
<div class="field">
    <label class="label">Button Name</label>
    <div class="control">
        <input class="input" type="text" placeholder="i.e PlaysAMeme" @bind-value="ButtonData.Name"/>
    </div>
</div>
<div class="field">
    <label class="label">Button Text</label>
    <div class="control">
        <input class="input" type="text" placeholder="i.e Play A Meme" @bind-value="ButtonData.Text"/>
    </div>
</div>
<div class="field">
    <label class="label">Button Color</label>
    <div class="control">
        <input class="input" type="color" @bind-value="ButtonData.BackgroundColor" />
    </div>
</div>
<div class="field">
    <label class="label">Text Color</label>
    <div class="control">
        <input class="input" type="color" @bind-value="ButtonData.TextColor" />
    </div>
</div>
<label class="label">Icon Style</label>
<div class="field has-addons">
    <div class="control">
        <input class="input is-icon-picker" type="text" value="@ButtonData.IconClass" @onchange="OnIconChanged"/>
    </div>
    <div class="control">
        <a class="button is-static">
            <span class="icon">
                <i class="@(ButtonData.IconClass)"></i>
            </span>
        </a>
    </div>
</div>
<div class="field is-grouped">
  <div class="control">
    <button class="button is-primary" @onclick="() => OnClosed.InvokeAsync()">Close</button>
  </div>
</div>

@code {
    [Parameter] 
    public ButtonData ButtonData { get; set; }

    [Parameter] 
    public EventCallback OnClosed { get; set; }

    private void OnIconChanged(ChangeEventArgs e)
    {
        ButtonData.IconClass = e.Value.ToString();
    }
}