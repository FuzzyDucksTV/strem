@page "/test"
@using Strem.Core.Types
@using Strem.OBS.v4.Services.Client

@inject IObservableOBSClient ObsClient;

<div class="container is-fullwidth">
    <div class="box">
            <div class="field">
                <div class="control">
                    <TrueOrFalse @bind-Value="IsActive"/>
                </div>
            </div>
        
        
            <span class="tag">@IsActive</span>
    </div>

    <div class="box">
        <EnumWithValueInput @bind-EnumValue="UnitType" @bind-Value="ValueType" Placeholder="Something good here chief"/>
        <div class="notification is-info">
            <span>@UnitType</span>
            <span>@ValueType</span>
        </div>
    </div>
    
    <TagEditor Tags="Tags"></TagEditor>
    
</div>


@code {
    
    public string Entry { get; set; } = "Woop";

    public string[] Data = new[] { "boom", "Woop", "pow" };
    
    public bool IsActive { get; set; }

    public List<string> Tags = new() { "clips", "example", "mods", "reward" };
    
    public TimeUnitType UnitType { get; set; }
    public string ValueType { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (ObsClient.IsConnected)
        {
            var result = await ObsClient.GetSourcesList();
            result.Select(x => x.Name).Distinct();
        }
    }

}