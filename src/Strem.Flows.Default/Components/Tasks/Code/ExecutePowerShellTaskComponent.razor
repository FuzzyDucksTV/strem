@using BlazorMonaco.Editor
@inherits CustomTaskComponent<Strem.Flows.Default.Flows.Tasks.Code.ExecutePowerShellTaskData>

<div class="field">
    <div class="control" style="min-height: 20em;">
        <StandaloneCodeEditor Id="@Data.Id.ToString()" CssClass="block is-info" ConstructionOptions="EditorConstructionOptions" OnDidChangeModelContent="OnContentChanged" @ref="_editor"/>
    </div>
    <HelperInfo>Your variables are exposed in the format of <strong>GetVariable name.context</strong> (context is optional as always) i.e GetVariable username.twitch</HelperInfo>
</div>

@code 
{
    private StandaloneCodeEditor  _editor { get; set; }

    public override string Title => GetTitle();

    public string GetTitle()
    {
        return $"Execute Powershell Script";
    }
    
    private StandaloneEditorConstructionOptions EditorConstructionOptions(StandaloneCodeEditor  editor)
    {
        return new StandaloneEditorConstructionOptions
        {
            AutomaticLayout = true,
            Language = "powershell",
            Contextmenu = false,
            Value = Data.PSCode,
            Minimap = new EditorMinimapOptions { Enabled = false },
            Theme = "vs-dark"
        };
    }

    private async Task OnContentChanged()
    {
        Data.PSCode = await _editor.GetValue();
        NotifyPropertyChanged(nameof(Data.PSCode));
    }
}