@using Strem.Core.Flows

@inherits CustomTaskComponent<Strem.Flows.Default.Flows.Tasks.Utility.ExecuteFlowTaskData>

@inject IFlowStore FlowStore;

<div class="field">
    <label class="label">Flow</label>
    <div class="control">
        <div class="select">
            <select @bind="Data.FlowId">
                @foreach (var flow in FlowStore.Flows)
                {
                    <option value="@flow.Id">@(flow.Name)</option>
                }
            </select>
        </div>
    </div>
</div>
<div class="field">
  <div class="control">
    <label class="checkbox">
      <input type="checkbox" @bind="Data.WaitForCompletion">
      Wait For Flow To Finish?
    </label>
  </div>
</div>

@code {
    public override string Title => GetTitle();

    public string GetTitle()
    {
        var targettedFlow = FlowStore.Flows.SingleOrDefault(x => x.Id == Data.FlowId);
        if(targettedFlow == null) { return "Execute Flow"; }
        return $"Execute <strong>{targettedFlow.Name}</strong> Flow";
    }
}