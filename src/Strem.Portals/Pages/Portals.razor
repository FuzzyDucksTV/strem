@page "/portals"

@using Strem.Portals.Data
@using Strem.Core.Events.Bus
@using Strem.Core.Services.Notifications
@using Strem.Portals.Events

@inject IPortalStore PortalStore
@inject IEventBus EventBus
@inject INotifier Notifier

<div class="container is-fluid">
    <div class="columns is-variable is-6">
        <div class="column is-one-quarter">
            <UserPortals OnPortalSelected="SelectPortal"></UserPortals>
        </div>
        <div class="column">
            @if (CurrentPortal != null)
            {
                <PortalEditor Portal="CurrentPortal" RequestingDeletion="DeletePortal"></PortalEditor>
            }
        </div>
    </div>
</div>


@code {
    public PortalData CurrentPortal { get; set; } = null;
    
    private void SelectPortal(PortalData newPortal)
    {
        CurrentPortal = newPortal;
        InvokeAsync(StateHasChanged);
    }

    private void DeletePortal(Guid portalId)
    {
        var portal = PortalStore.Portals.SingleOrDefault(x => x.Id == portalId);
        if (portal == null) { return; }
        
        PortalStore.Portals.Remove(portal);
        CurrentPortal = null;
        EventBus.PublishAsync(new PortalChangedEvent(portalId));
        InvokeAsync(StateHasChanged);
        Notifier.ShowNotification($"Portal {portal.Name} Has Been Deleted", "is-danger");
    }

}