@using Strem.Portals.Data
@using Strem.Portals.Types
@using Strem.Core.Extensions
@using Strem.Core.Services.UI.Animation
@using Strem.Infrastructure.Extensions
@using Microsoft.JSInterop
@using Strem.Portals.Extensions

@inject IJSRuntime Js

<a class="button portal-button m-3 is-flex is-flex-direction-column button-size-@(ButtonSize.ToString().ToLower())"
   @ref="_buttonElement" @onclick="OnButtonPressed" style="@GetButtonStyles()">
    @if (ElementStyles.ButtonType == ButtonType.IconButton)
    {
        <span class="icon fa-3x m-auto">
            <i class="fas @(ElementStyles.IconClass())"></i>
        </span>
    }
    else if (ElementStyles.ButtonType == ButtonType.ImageButton)
    {
        <figure class="image @GetImageSize()">
            <img alt="@ElementStyles.Text" src="@ElementStyles.ImageUrl().GetImageUrl()" class="is-full"/>
        </figure>
    }
    <label class="label @GetTextSize()" style="color: @(ElementStyles.ForegroundColor)">@ElementStyles.Text</label>
</a>

@code {
    [Parameter]
    public Guid ButtonId { get; set; }
    
    [Parameter]
    public ElementStyles ElementStyles { get; set; }
    
    [Parameter]
    public ButtonSize ButtonSize { get; set; }
    
    [Parameter]
    public EventCallback<Guid> ButtonPressed { get; set; }

    private ElementReference _buttonElement;
    
    public async Task OnButtonPressed()
    {
        ButtonPressed.InvokeAsync(ButtonId);
        await Js.InvokeVoidAsync("animateElement", _buttonElement, "heartBeat");
    }
    
    private string GetButtonStyles()
    { return $"background-color: {ElementStyles.BackgroundColor}; color: {ElementStyles.ForegroundColor}"; }

    private string GetImageSize()
    {
        if(ButtonSize == ButtonSize.Medium) { return "is-128x128"; }
        if(ButtonSize == ButtonSize.Large) { return "is-160x160"; }
        return "is-96x96";
    }
    
    private string GetTextSize()
    {
        if(ButtonSize == ButtonSize.Medium) { return "is-size-7"; }
        if(ButtonSize == ButtonSize.Large) { return "is-size-6"; }
        return "is-size-7";
    }
}