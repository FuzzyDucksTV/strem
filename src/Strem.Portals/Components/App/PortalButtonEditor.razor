@using Strem.Portals.Data
@using Microsoft.AspNetCore.Components
@using Strem.Core.Extensions
@using Strem.Portals.Types

@inherits ValidatedComponent<Strem.Portals.Data.ButtonData>

<h3 class="title is-3 has-text-black">Edit Button</h3>
<EditForm EditContext="EditContext" class="block">
<div class="field">
    <label class="label">Button Name</label>
    <div class="control">
        <GenericInput placeholder="i.e PlaysAMeme" @bind-Value="Data.Name" />
    </div>
</div>
<div class="field">
    <label class="label">Button Text</label>
    <div class="control">
        <GenericInput placeholder="i.e Play A Meme" @bind-Value="Data.DefaultStyles.Text"/>
    </div>
</div>
<div class="field">
    <label class="label">Button Color</label>
    <div class="control">
        <GenericInput type="color" @bind-Value="Data.DefaultStyles.BackgroundColor" />
    </div>
</div>
<div class="field">
    <label class="label">Text Color</label>
    <div class="control">
        <GenericInput type="color" @bind-Value="Data.DefaultStyles.TextColor" />
    </div>
</div>
<div class="field">
    <label class="label">Button Type</label>
    <EnumSelectInput @bind-Value="Data.DefaultStyles.ButtonType"></EnumSelectInput>
</div>

@if (Data.DefaultStyles.ButtonType == ButtonType.IconButton)
{
    <label class="label">Icon Style</label>
    <div class="field">
        <div class="control">
            <IconPicker @bind-Value="Data.DefaultStyles.IconClass"></IconPicker>
        </div>
    </div>
}
else if (Data.DefaultStyles.ButtonType == ButtonType.ImageButton)
{
    <label class="label">Icon Image</label>
    <div class="field">
        <div class="control">
            <FileInputBrowser @bind-Value="Data.DefaultStyles.ImageUrl" placeholder="i.e http://some-site.com/some-image.png or c:/some-file.png" />
        </div>
        <HelperInfo>This can be a url to a file online or a local file, local files need more processing though so the larger they are the longer they will take to load, try to keep sizes below 256x256 pixels</HelperInfo>
    </div>
    <div class="field">
        <div class="control">
            <figure class="image is-128x128">
                <img alt="@Data.DefaultStyles.Text" src="@Data.DefaultStyles.ImageUrl.GetImageUrl()" class="is-full" />
            </figure>
        </div>
    </div>
}

@if (!IsValid)
{
    <ValidaitonMessageContainer Messages="EditContext.GetValidationMessages()"/>
}
</EditForm>
<div class="field is-grouped">
    <div class="control">
        <button class="button is-danger" @onclick="() => RequestedDeletion.InvokeAsync(Data.Id)">Delete Button</button>
    </div>
    <div class="control">
        <button class="button is-primary" @onclick="() => OnClosed.InvokeAsync()">Close</button>
    </div>
</div>

@code {
    [Parameter] 
    public EventCallback OnClosed { get; set; }
    
    [Parameter]
    public EventCallback<Guid> RequestedDeletion { get; set; }
}