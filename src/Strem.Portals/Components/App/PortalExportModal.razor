@using Strem.Portals.Services.Stores

@inject IPortalStore PortalStore

<h3 class="title is-3 has-text-black">Export Flows</h3>
<table class="table is-fullwidth">
    <thead>
    <tr>
        <th width="10%">Export</th>
        <th>Flow Name</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var portal in PortalStore.Data)
    {
        <tr>
            <td>
                <CheckBox ValueChanged="x => UpdateExports(portal.Id, x)"></CheckBox>
            </td>
            <td>@(portal.Name)</td>
        </tr>
    }
    </tbody>
</table>
<div class="field">
    <div class="control">
    </div>
</div>

<div class="field is-grouped">
    <div class="control">
        <button class="button is-primary is-expanded" @onclick="RequestExport">Export @(ActiveExports.Count) Flows</button>
    </div>
    <div class="control">
        <button class="button is-link is-light" @onclick="CancelModal">Cancel</button>
    </div>
</div>

@code {
    
    [Parameter] 
    public EventCallback<IEnumerable<Guid>> OnRequestExports { get; set; }
    
    [Parameter] 
    public EventCallback OnCancelled { get; set; }

    public HashSet<Guid> ActiveExports { get; set; } = new();
    

    public void CancelModal()
    {
        ActiveExports.Clear();
        OnCancelled.InvokeAsync();
    }

    private void UpdateExports(Guid flowId, bool isSelected)
    {
        if (isSelected)
        { ActiveExports.Add(flowId); }
        else
        { ActiveExports.Remove(flowId); }
    }

    private void RequestExport()
    {
        OnRequestExports.InvokeAsync(ActiveExports.ToArray());
        ActiveExports.Clear();
    }

}