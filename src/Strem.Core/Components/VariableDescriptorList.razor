@using Strem.Core.Flows
@using Strem.Core.Variables
@using Strem.Core.Events.Bus
@using Strem.Core.Events
@using Strem.Core.Extensions
@using Strem.Core.Services.Notifications
@using TextCopy

@inject INotifier Notifier;

<div class="field is-grouped is-grouped-multiline">
    @foreach (var descriptor in VariableDescriptors)
    {
        <div class="control">
            <div class="tags has-addons is-clickable" @onclick="() => CopyVariableToClipboard(descriptor.VariableEntry)">
                <span class="tag @(descriptor.IsMandatory ? "is-success" : "is-warning")">@descriptor.VariableEntry.Name</span>
                @if (!string.IsNullOrEmpty(descriptor.VariableEntry.Context))
                {
                    <span class="tag is-info">@descriptor.VariableEntry.Context</span>
                }
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public VariableDescriptor[] VariableDescriptors { get; set; }

    private async Task CopyVariableToClipboard(VariableEntry variableEntry)
    {
        var variableText = $"V({variableEntry.Name}{(variableEntry.HasContext() ? $",{variableEntry.Context}" : "")})";
        await ClipboardService.SetTextAsync(variableText);
        await Notifier.ShowNotification("Copied Variable To Clipboard");
    }

}