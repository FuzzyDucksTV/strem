@typeparam TEnum

<div class="field has-addons">
    <div class="control">
        <button class="button @(Enabled ? "is-success" : "is-danger")" @onclick="() => EnabledChanged.InvokeAsync(!Enabled)">
            <span class="icon is-small">
                <i class="fas @(Enabled ? "fa-check" : "fa-xmark")"></i>
            </span>
        </button>
    </div>
    <div class="control is-expanded">
        <div class="select">
            <select value="@Value" disabled="@(!Enabled)" @onchange="args => ValueChanged.InvokeAsync((TEnum)Enum.Parse(typeof(TEnum), args.Value.ToString()))">
                <EnumSelectOptions EnumType="typeof(TEnum)"></EnumSelectOptions>
            </select>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public bool Enabled { get; set; }
    
    [Parameter]
    public EventCallback<bool> EnabledChanged { get; set; } 
    
    [Parameter]
    public TEnum Value { get; set; }
    
    [Parameter]
    public EventCallback<TEnum> ValueChanged { get; set; } 
    
    [Parameter]
    public string Placeholder { get; set; }

    [Parameter]
    public string Type { get; set; } = "text";

}