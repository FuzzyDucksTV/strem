@using Microsoft.AspNetCore.Components

@inherits Strem.Core.Components.Elements.Inputs.ValidatedInputBase<string>

<div class="autocomplete dropdown is-leveled @(ShowDropdown ? "is-active" : "") @(IsValid != null ? IsValid.Value ? "valid" : "invalid" : "")">
    <div class="dropdown-trigger is-leveled">
        <input class="input" aria-haspopup="true" aria-controls="dropdown-menu" value="@Value"
               @onfocus="() => ShowDropdown = true" @onblur="HideDropDown"
               @oninput="x => OnValueChanged(x.Value.ToString())"/>
    </div>
    <div class="dropdown-menu is-leveled" id="dropdown-menu" role="menu">
        <div class="dropdown-content is-leveled">
            @foreach (var entry in CurrentMatches.Take(MaxResults))
            {
                var entryText = entry;
                <a class="dropdown-item has-text-black" @onclick="() => SetSelection(entryText)">
                    @entry
                </a>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public IReadOnlyCollection<string> Data { get; set; }

    [Parameter]
    public int MaxResults { get; set; } = 10;

    public IEnumerable<string> CurrentMatches
    {
        get
        { return Value is null ? Data : Data.Where(x => x.Contains(Value, StringComparison.OrdinalIgnoreCase)); }
    }

    public bool ShowDropdown { get; set; }

    private void SetSelection(string entry)
    {
        Value = entry;
        OnValueChanged(entry);
    }

    private async Task HideDropDown()
    {
        await Task.Delay(100);
        ShowDropdown = false;
    }
}