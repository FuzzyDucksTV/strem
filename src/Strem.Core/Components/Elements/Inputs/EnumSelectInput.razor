@typeparam T

@inherits ValidatedInputBase<T>

<div class="select @(IsValid != null ? IsValid.Value ? "valid" : "invalid" : "")">
    <select value="@Value" @onchange="e => OnValueChanged((T)Enum.Parse(typeof(T), e.Value.ToString()))" @attributes=@UnmatchedAttributes>
        @foreach (var enumValue in Enum.GetValues(typeof(T)))
        {
            <option value="@enumValue">@(GetName(enumValue))</option>
        }
    </select>
</div>

@code {
    [Parameter]
    public Func<object, string> GetName { get; set; } = x => x.ToString();
}
