@typeparam TEnum

@using Strem.Core.Extensions
@inherits ValidatedInputBase<string>

<div class="enum-with-value field has-addons @(IsValid != null ? IsValid.Value ? "valid" : "invalid" : "")">
    <div class="control">
        <div class="select">
            <EnumSelectInput @bind-Value="ProxyEnumValue" />
        </div>
    </div>
    <div class="control is-expanded">
        <ProcessedInput @bind-Value="ProxyValue" @attributes=@UnmatchedAttributes.AllBut("class") />
    </div>
</div>

@code {
    [Parameter]
    public TEnum EnumValue { get; set; }
    
    [Parameter]
    public EventCallback<TEnum> EnumValueChanged { get; set; }
    
    public string ProxyValue
    {
        get => Value;
        set => OnValueChanged(value);
    }    
    
    public TEnum ProxyEnumValue
    {
        get => EnumValue;
        set => OnEnumChanged(value);
    }

    public void OnEnumChanged(TEnum value)
    {
        EnumValueChanged.InvokeAsync(value);
        OnValueChanged(Value);
    }
}