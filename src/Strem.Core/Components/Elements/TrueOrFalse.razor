@using System.Linq.Expressions
@inherits ValidatedInputBase<bool>

<div class="buttons">
  <button class="button @(Value ? "is-success" : "")" @onclick="() => OnValueChanged(true)">
    <span class="icon">
      <i class="fas @(Value ? "fa-square-check" : "fa-square")"></i>
    </span>
    <span>@TrueText</span>
  </button>
  <button class="button @(!Value ? "is-success" : "")" @onclick="() => OnValueChanged(false)">
      <span class="icon">
        <i class="fas @(!Value ? "fa-square-check" : "fa-square")"></i>
      </span>
      <span>@FalseText</span>
    </button>
</div>

@code 
{
  [Parameter]
  public string GroupName { get; set; } = "yorn";

  [Parameter]
  public string TrueText { get; set; } = "Enable";

  [Parameter]
  public string FalseText { get; set; } = "Disable";

  protected override bool TryParseValueFromString(string? value, out bool result, out string? validationErrorMessage)
  {
    var didSucceed = bool.TryParse(value, out result);
    validationErrorMessage = !didSucceed ? "Couldn't convert value to boolean" : null;
    return didSucceed;
  }
}