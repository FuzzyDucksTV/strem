@using Microsoft.AspNetCore.Components
@using Strem.Flows.Components.Triggers;
@using Strem.Core.Types
@using TwitchLib.Client.Enums
@using System.Text.RegularExpressions

@inherits CustomTriggerComponent<Strem.Twitch.Flows.Triggers.Chat.OnTwitchWhisperMessageTriggerData>

<div class="field">
    <label class="label">Message Content Requirements</label>
    <div class="control">
        <EnumSelectInput @bind-Value="Data.MatchType"></EnumSelectInput>
    </div>
    <HelperInfo>This will only trigger if the text matches your requirements</HelperInfo>
</div>

@if (Data.MatchType != TextMatchType.None)
{
    <div class="field">
        <label class="label">Message Match @(Data.MatchType == TextMatchType.Pattern ? "Regex Pattern" : "Text")</label>
        <div class="control">
            <ProcessedInput @bind-Value="Data.MatchText" Placeholder="@(Data.MatchType == TextMatchType.Pattern ? "i.e regex pattern to match" : "i.e text to matching")"></ProcessedInput>
        </div>
    </div>
    
    @if (Data.MatchType == TextMatchType.Pattern)
    {
        <Accordion Title="Regex Pattern Tester">
            <RegexTester RegexPattern="@Data.MatchText"></RegexTester>
        </Accordion>
    }
}

@code {
    public override string Title => GenerateTitle();
    
    public string GenerateTitle()
    {
        var hasTextMatch = Data.MatchType != TextMatchType.None;
        var textRequirements =  hasTextMatch ? "With Text Match" : "";
        return $"Trigger On Twitch Whisper Received {textRequirements}";
    }
}